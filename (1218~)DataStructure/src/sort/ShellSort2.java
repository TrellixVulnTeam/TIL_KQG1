package sort;

import java.util.Scanner;

public class ShellSort2 {
	static void shellsort(int[] a, int n) {
		int h ;
		for (h=1 ; h< n/9 ; h = h * h +1) ;
		
		
//		1과의 차이점
		
		for( ; h > 0 ; h/=3 ) {
			for (int i = 0; i<n  ; i ++) {
				int j ;
				int tmp = a[i];
				for (j = i- h ; j >=0 && a[j]> tmp ; j -= h) {
					a [j+h] = a [j];
					
				}
				a[j+h]= tmp;
			}
		}
			
//		마지막 h값은 1이된다.
//		복잡도는 O(n^1.25)	로 기존 O(n^2)보다 빠르지만 멀리 떨어져 있는 요소를 교환해야 하므로 안정적이지는 않다.
		
	
	}

	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		
		System.out.println(" 셸 정렬 버전 2");
		System.out.println(" 요솟 수  : ");
		int nx = scn.nextInt();
		int [] x= new int [nx];
		
		
		for (int i = 0; i<nx; i ++) {
			System.out.println("x[" + i + "]");
			x[i] = scn.nextInt();
			
		}
		
		shellsort(x,nx);
		
		
		System.out.println(" 오름차순으로 정렬 완료");
		for (int i = 0; i < nx; i++) {
			System.out.println("[" + i + "]=" + x[i]);
		}
				
	}

}
